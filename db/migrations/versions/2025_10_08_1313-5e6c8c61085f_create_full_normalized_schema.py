"""create_full_normalized_schema

Revision ID: 5e6c8c61085f
Revises: 788c99d6b75d
Create Date: 2025-10-08 13:13:51.353143

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '5e6c8c61085f'
down_revision = '788c99d6b75d'
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('manufacturers',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_manufacturers_name'), 'manufacturers', ['name'], unique=True)
    op.create_table('models',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('manufacturer_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.ForeignKeyConstraint(['manufacturer_id'], ['manufacturers.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('manufacturer_id', 'name', name='uq_model_manufacturer_name')
    )
    op.create_index(op.f('ix_models_name'), 'models', ['name'], unique=False)
    op.create_table('variants',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('model_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('start_year', sa.Integer(), nullable=True),
    sa.Column('end_year', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['model_id'], ['models.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('model_id', 'name', name='uq_variant_model_name')
    )
    op.create_index(op.f('ix_variants_name'), 'variants', ['name'], unique=False)
    op.create_table('unique_cars',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('variant_id', sa.Integer(), nullable=False),
    sa.Column('vin', sa.String(length=17), nullable=True),
    sa.Column('first_seen_at', sa.DateTime(), nullable=True),
    sa.Column('last_seen_at', sa.DateTime(), nullable=True),
    sa.Column('status', sa.String(length=50), nullable=True),
    sa.ForeignKeyConstraint(['variant_id'], ['variants.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_unique_cars_status'), 'unique_cars', ['status'], unique=False)
    op.create_index(op.f('ix_unique_cars_vin'), 'unique_cars', ['vin'], unique=True)
    op.add_column('ads', sa.Column('unique_car_id', sa.Integer(), nullable=True))
    op.add_column('ads', sa.Column('raw_title', sa.String(length=500), nullable=True))
    op.add_column('ads', sa.Column('raw_price', sa.Float(), nullable=True))
    op.add_column('ads', sa.Column('raw_year', sa.Integer(), nullable=True))
    op.add_column('ads', sa.Column('raw_make', sa.String(length=100), nullable=True))
    op.add_column('ads', sa.Column('raw_model', sa.String(length=100), nullable=True))
    op.add_column('ads', sa.Column('raw_location', sa.String(length=255), nullable=True))
    op.add_column('ads', sa.Column('last_scraped_at', sa.DateTime(), nullable=True))
    op.drop_index('ix_ads_make', table_name='ads')
    op.drop_index('ix_ads_model', table_name='ads')
    op.drop_index('ix_ads_year', table_name='ads')
    op.create_index(op.f('ix_ads_unique_car_id'), 'ads', ['unique_car_id'], unique=False)
    op.create_unique_constraint('uq_ad_source', 'ads', ['source_site', 'source_id'])
    op.create_foreign_key(None, 'ads', 'unique_cars', ['unique_car_id'], ['id'])
    op.drop_column('ads', 'currency')
    op.drop_column('ads', 'official_color')
    op.drop_column('ads', 'updated_at')
    op.drop_column('ads', 'title')
    op.drop_column('ads', 'color')
    op.drop_column('ads', 'location')
    op.drop_column('ads', 'scraped_at')
    op.drop_column('ads', 'model')
    op.drop_column('ads', 'year')
    op.drop_column('ads', 'make')
    op.drop_column('ads', 'price')
    op.add_column('images', sa.Column('variant_id', sa.Integer(), nullable=True))
    op.add_column('images', sa.Column('unique_car_id', sa.Integer(), nullable=True))
    op.alter_column('images', 'checksum',
               existing_type=sa.VARCHAR(length=64),
               nullable=False)
    op.drop_index('ix_images_checksum', table_name='images')
    op.create_index(op.f('ix_images_checksum'), 'images', ['checksum'], unique=True)
    op.create_foreign_key(None, 'images', 'variants', ['variant_id'], ['id'])
    op.create_foreign_key(None, 'images', 'unique_cars', ['unique_car_id'], ['id'])
    op.drop_column('images', 'width')
    op.drop_column('images', 'updated_at')
    op.drop_column('images', 'height')
    op.drop_column('images', 'model_predictions')
    op.drop_column('images', 'labels_bootstrap')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('images', sa.Column('labels_bootstrap', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True))
    op.add_column('images', sa.Column('model_predictions', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True))
    op.add_column('images', sa.Column('height', sa.INTEGER(), autoincrement=False, nullable=True))
    op.add_column('images', sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True))
    op.add_column('images', sa.Column('width', sa.INTEGER(), autoincrement=False, nullable=True))
    op.drop_constraint(None, 'images', type_='foreignkey')
    op.drop_constraint(None, 'images', type_='foreignkey')
    op.drop_index(op.f('ix_images_checksum'), table_name='images')
    op.create_index('ix_images_checksum', 'images', ['checksum'], unique=False)
    op.alter_column('images', 'checksum',
               existing_type=sa.VARCHAR(length=64),
               nullable=True)
    op.drop_column('images', 'unique_car_id')
    op.drop_column('images', 'variant_id')
    op.add_column('ads', sa.Column('price', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True))
    op.add_column('ads', sa.Column('make', sa.VARCHAR(length=100), autoincrement=False, nullable=True))
    op.add_column('ads', sa.Column('year', sa.INTEGER(), autoincrement=False, nullable=True))
    op.add_column('ads', sa.Column('model', sa.VARCHAR(length=100), autoincrement=False, nullable=True))
    op.add_column('ads', sa.Column('scraped_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False))
    op.add_column('ads', sa.Column('location', sa.VARCHAR(length=255), autoincrement=False, nullable=True))
    op.add_column('ads', sa.Column('color', sa.VARCHAR(length=100), autoincrement=False, nullable=True))
    op.add_column('ads', sa.Column('title', sa.VARCHAR(length=500), autoincrement=False, nullable=True))
    op.add_column('ads', sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True))
    op.add_column('ads', sa.Column('official_color', sa.VARCHAR(length=100), autoincrement=False, nullable=True))
    op.add_column('ads', sa.Column('currency', sa.VARCHAR(length=10), autoincrement=False, nullable=True))
    op.drop_constraint(None, 'ads', type_='foreignkey')
    op.drop_constraint('uq_ad_source', 'ads', type_='unique')
    op.drop_index(op.f('ix_ads_unique_car_id'), table_name='ads')
    op.create_index('ix_ads_year', 'ads', ['year'], unique=False)
    op.create_index('ix_ads_model', 'ads', ['model'], unique=False)
    op.create_index('ix_ads_make', 'ads', ['make'], unique=False)
    op.drop_column('ads', 'last_scraped_at')
    op.drop_column('ads', 'raw_location')
    op.drop_column('ads', 'raw_model')
    op.drop_column('ads', 'raw_make')
    op.drop_column('ads', 'raw_year')
    op.drop_column('ads', 'raw_price')
    op.drop_column('ads', 'raw_title')
    op.drop_column('ads', 'unique_car_id')
    op.drop_index(op.f('ix_unique_cars_vin'), table_name='unique_cars')
    op.drop_index(op.f('ix_unique_cars_status'), table_name='unique_cars')
    op.drop_table('unique_cars')
    op.drop_index(op.f('ix_variants_name'), table_name='variants')
    op.drop_table('variants')
    op.drop_index(op.f('ix_models_name'), table_name='models')
    op.drop_table('models')
    op.drop_index(op.f('ix_manufacturers_name'), table_name='manufacturers')
    op.drop_table('manufacturers')
    # ### end Alembic commands ###

