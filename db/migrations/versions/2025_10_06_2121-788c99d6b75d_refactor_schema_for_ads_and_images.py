"""refactor_schema_for_ads_and_images

Revision ID: 788c99d6b75d
Revises: 3777eb07e199
Create Date: 2025-10-06 21:21:35.428969

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '788c99d6b75d'
down_revision = '3777eb07e199'
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('ads',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('source_site', sa.String(length=100), nullable=False),
    sa.Column('source_id', sa.String(length=255), nullable=False),
    sa.Column('source_url', sa.Text(), nullable=False),
    sa.Column('title', sa.String(length=500), nullable=True),
    sa.Column('price', sa.Float(), nullable=True),
    sa.Column('currency', sa.String(length=10), nullable=True),
    sa.Column('year', sa.Integer(), nullable=True),
    sa.Column('make', sa.String(length=100), nullable=True),
    sa.Column('model', sa.String(length=100), nullable=True),
    sa.Column('location', sa.String(length=255), nullable=True),
    sa.Column('color', sa.String(length=100), nullable=True),
    sa.Column('official_color', sa.String(length=100), nullable=True),
    sa.Column('raw_data', sa.JSON(), nullable=True),
    sa.Column('scraped_at', sa.DateTime(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('source_url')
    )
    op.create_index(op.f('ix_ads_make'), 'ads', ['make'], unique=False)
    op.create_index(op.f('ix_ads_model'), 'ads', ['model'], unique=False)
    op.create_index(op.f('ix_ads_source_id'), 'ads', ['source_id'], unique=False)
    op.create_index(op.f('ix_ads_source_site'), 'ads', ['source_site'], unique=False)
    op.create_index(op.f('ix_ads_year'), 'ads', ['year'], unique=False)
    op.create_table('images',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('ad_id', sa.Integer(), nullable=True),
    sa.Column('image_uri', sa.String(length=1024), nullable=False),
    sa.Column('checksum', sa.String(length=64), nullable=True),
    sa.Column('width', sa.Integer(), nullable=True),
    sa.Column('height', sa.Integer(), nullable=True),
    sa.Column('status', sa.String(length=50), nullable=True),
    sa.Column('labels_bootstrap', sa.JSON(), nullable=True),
    sa.Column('annotations', sa.JSON(), nullable=True),
    sa.Column('model_predictions', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['ad_id'], ['ads.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('image_uri')
    )
    op.create_index(op.f('ix_images_checksum'), 'images', ['checksum'], unique=False)
    op.create_index(op.f('ix_images_status'), 'images', ['status'], unique=False)

    # FIX: Drop dependent table first
    op.drop_index('ix_car_ads_enriched_canonical_make', table_name='car_ads_enriched')
    op.drop_index('ix_car_ads_enriched_canonical_model', table_name='car_ads_enriched')
    op.drop_table('car_ads_enriched')

    # Now drop the primary table
    op.drop_index('ix_car_ads_raw_make', table_name='car_ads_raw')
    op.drop_index('ix_car_ads_raw_model', table_name='car_ads_raw')
    op.drop_index('ix_car_ads_raw_source_id', table_name='car_ads_raw')
    op.drop_index('ix_car_ads_raw_source_site', table_name='car_ads_raw')
    op.drop_index('ix_car_ads_raw_year', table_name='car_ads_raw')
    op.drop_table('car_ads_raw')
    
    op.drop_index('ix_official_car_data_make', table_name='official_car_data')
    op.drop_index('ix_official_car_data_model', table_name='official_car_data')
    op.drop_index('ix_official_car_data_year', table_name='official_car_data')
    op.drop_table('official_car_data')

    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    
    # FIX: Recreate tables in correct dependency order
    op.create_table('official_car_data',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('make', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('model', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('year', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('generation', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('trim', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('specs', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('available_features', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('available_colors', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('data_source', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('source_url', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('fetched_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('is_current', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='official_car_data_pkey')
    )
    op.create_index('ix_official_car_data_year', 'official_car_data', ['year'], unique=False)
    op.create_index('ix_official_car_data_model', 'official_car_data', ['model'], unique=False)
    op.create_index('ix_official_car_data_make', 'official_car_data', ['make'], unique=False)

    op.create_table('car_ads_raw',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('source_site', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('source_id', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('source_url', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('raw_data', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=False),
    sa.Column('title', sa.VARCHAR(length=500), autoincrement=False, nullable=True),
    sa.Column('price', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('currency', sa.VARCHAR(length=10), autoincrement=False, nullable=True),
    sa.Column('year', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('make', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('model', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('mileage', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('location', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('image_urls', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('scraped_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('is_active', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('is_processed', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('dealer_name', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('dealer_type', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('fuel_type', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('transmission', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('body_type', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('color', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('engine_power', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('engine_displacement', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('local_image_paths', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='car_ads_raw_pkey')
    )
    op.create_index('ix_car_ads_raw_year', 'car_ads_raw', ['year'], unique=False)
    op.create_index('ix_car_ads_raw_source_site', 'car_ads_raw', ['source_site'], unique=False)
    op.create_index('ix_car_ads_raw_source_id', 'car_ads_raw', ['source_id'], unique=False)
    op.create_index('ix_car_ads_raw_model', 'car_ads_raw', ['model'], unique=False)
    op.create_index('ix_car_ads_raw_make', 'car_ads_raw', ['make'], unique=False)

    op.create_table('car_ads_enriched',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('raw_ad_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('canonical_make', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('canonical_model', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('generation', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('trim', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('body_type', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('engine_type', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('engine_displacement', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('horsepower', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('transmission', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('drivetrain', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('fuel_type', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('features', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('colors', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('data_quality_score', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('is_validated', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('validation_errors', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('matched_official_data', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('official_data_source', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('enriched_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('detected_color', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('detected_color_confidence', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['raw_ad_id'], ['car_ads_raw.id'], name='car_ads_enriched_raw_ad_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='car_ads_enriched_pkey'),
    sa.UniqueConstraint('raw_ad_id', name='car_ads_enriched_raw_ad_id_key')
    )
    op.create_index('ix_car_ads_enriched_canonical_model', 'car_ads_enriched', ['canonical_model'], unique=False)
    op.create_index('ix_car_ads_enriched_canonical_make', 'car_ads_enriched', ['canonical_make'], unique=False)
    
    op.drop_index(op.f('ix_images_status'), table_name='images')
    op.drop_index(op.f('ix_images_checksum'), table_name='images')
    op.drop_table('images')
    op.drop_index(op.f('ix_ads_year'), table_name='ads')
    op.drop_index(op.f('ix_ads_source_site'), table_name='ads')
    op.drop_index(op.f('ix_ads_source_id'), table_name='ads')
    op.drop_index(op.f('ix_ads_model'), table_name='ads')
    op.drop_index(op.f('ix_ads_make'), table_name='ads')
    op.drop_table('ads')
    # ### end Alembic commands ###

