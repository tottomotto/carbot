"""Create schema with unit-specific columns

Revision ID: ba30e07d1c45
Revises: 
Create Date: 2025-10-10 17:16:26.355630

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'ba30e07d1c45'
down_revision = None
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('brands',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('country', sa.String(length=50), nullable=True),
    sa.Column('url', sa.Text(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('models',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('brand_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('body_type', sa.String(length=50), nullable=True),
    sa.Column('start_year', sa.Integer(), nullable=True),
    sa.Column('end_year', sa.Integer(), nullable=True),
    sa.Column('url', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['brand_id'], ['brands.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('generations',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('model_id', sa.Integer(), nullable=False),
    sa.Column('code', sa.String(length=20), nullable=True),
    sa.Column('gen_name', sa.String(length=100), nullable=True),
    sa.Column('start_year', sa.Integer(), nullable=True),
    sa.Column('end_year', sa.Integer(), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('url', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['model_id'], ['models.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('documents',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('generation_id', sa.Integer(), nullable=False),
    sa.Column('doc_type', sa.String(length=50), nullable=True),
    sa.Column('url', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['generation_id'], ['generations.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('versions',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('generation_id', sa.Integer(), nullable=False),
    sa.Column('version_name', sa.String(length=100), nullable=True),
    sa.Column('production_years', sa.String(length=20), nullable=True),
    sa.Column('engine_type', sa.String(length=50), nullable=True),
    sa.Column('engine_details', sa.Text(), nullable=True),
    sa.Column('url', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['generation_id'], ['generations.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('images',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('version_id', sa.Integer(), nullable=False),
    sa.Column('url', sa.Text(), nullable=False),
    sa.Column('caption', sa.String(length=255), nullable=True),
    sa.ForeignKeyConstraint(['version_id'], ['versions.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('specs',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('version_id', sa.Integer(), nullable=False),
    sa.Column('cylinders', sa.String(length=20), nullable=True),
    sa.Column('displacement_cc', sa.Integer(), nullable=True),
    sa.Column('displacement_l', sa.REAL(), nullable=True),
    sa.Column('power_hp', sa.Integer(), nullable=True),
    sa.Column('power_kw', sa.Integer(), nullable=True),
    sa.Column('power_bhp', sa.Integer(), nullable=True),
    sa.Column('power_rpm', sa.Integer(), nullable=True),
    sa.Column('torque_nm', sa.Integer(), nullable=True),
    sa.Column('torque_lb_ft', sa.Integer(), nullable=True),
    sa.Column('torque_rpm_min', sa.Integer(), nullable=True),
    sa.Column('torque_rpm_max', sa.Integer(), nullable=True),
    sa.Column('fuel_type', sa.String(length=20), nullable=True),
    sa.Column('fuel_capacity_l', sa.REAL(), nullable=True),
    sa.Column('fuel_capacity_gal', sa.REAL(), nullable=True),
    sa.Column('top_speed_kph', sa.Integer(), nullable=True),
    sa.Column('top_speed_mph', sa.Integer(), nullable=True),
    sa.Column('acceleration_0_100_kph', sa.REAL(), nullable=True),
    sa.Column('acceleration_0_60_mph', sa.REAL(), nullable=True),
    sa.Column('transmission', sa.String(length=50), nullable=True),
    sa.Column('drive_type', sa.String(length=50), nullable=True),
    sa.Column('brake_type_front', sa.String(length=50), nullable=True),
    sa.Column('brake_type_rear', sa.String(length=50), nullable=True),
    sa.Column('tire_size_front', sa.String(length=50), nullable=True),
    sa.Column('tire_size_rear', sa.String(length=50), nullable=True),
    sa.Column('length_mm', sa.Integer(), nullable=True),
    sa.Column('length_in', sa.REAL(), nullable=True),
    sa.Column('width_mm', sa.Integer(), nullable=True),
    sa.Column('width_in', sa.REAL(), nullable=True),
    sa.Column('height_mm', sa.Integer(), nullable=True),
    sa.Column('height_in', sa.REAL(), nullable=True),
    sa.Column('wheelbase_mm', sa.Integer(), nullable=True),
    sa.Column('wheelbase_in', sa.REAL(), nullable=True),
    sa.Column('ground_clearance_mm', sa.Integer(), nullable=True),
    sa.Column('ground_clearance_in', sa.REAL(), nullable=True),
    sa.Column('unladen_weight_kg', sa.Integer(), nullable=True),
    sa.Column('unladen_weight_lbs', sa.Integer(), nullable=True),
    sa.Column('gross_weight_kg', sa.Integer(), nullable=True),
    sa.Column('gross_weight_lbs', sa.Integer(), nullable=True),
    sa.Column('cargo_volume_l', sa.Integer(), nullable=True),
    sa.Column('cargo_volume_cuft', sa.REAL(), nullable=True),
    sa.Column('aerodynamics_cd', sa.REAL(), nullable=True),
    sa.Column('turning_circle_m', sa.REAL(), nullable=True),
    sa.Column('fuel_economy_city_l_100km', sa.REAL(), nullable=True),
    sa.Column('fuel_economy_city_mpg', sa.REAL(), nullable=True),
    sa.Column('fuel_economy_highway_l_100km', sa.REAL(), nullable=True),
    sa.Column('fuel_economy_highway_mpg', sa.REAL(), nullable=True),
    sa.Column('fuel_economy_combined_l_100km', sa.REAL(), nullable=True),
    sa.Column('fuel_economy_combined_mpg', sa.REAL(), nullable=True),
    sa.Column('co2_emissions_g_km', sa.Integer(), nullable=True),
    sa.Column('extra', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.ForeignKeyConstraint(['version_id'], ['versions.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('version_id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('specs')
    op.drop_table('images')
    op.drop_table('versions')
    op.drop_table('documents')
    op.drop_table('generations')
    op.drop_table('models')
    op.drop_table('brands')
    # ### end Alembic commands ###

